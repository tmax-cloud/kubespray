ingress_nginx_namespace: ingress-nginx-system
ingress_nginx_controller_image_repo: "{{ quay_image_repo }}/kubernetes-ingress-controller/nginx-ingress-controller"
ingress_nginx_controller_image_tag: 0.33.0
ingress_nginx_certgen_image_repo: "{{ docker_image_repo }}/jettech/kube-webhook-certgen"
ingress_nginx_certgen_image_tag: v1.2.2
ingress_nginx_http_port: 30080
ingress_nginx_https_port: 30443
ingress_nginx_service_type: LoadBalancer

hyperregistry_namespace: hyperregistry
hyperregistry_admin_password: admin
hyperregistry_ingress_nginx_class: nginx-system
hyperregistry_ingress_nginx_ip: ""
hyperregistry_storage_class: ""
hyperregistry_registry_disk_size: 50G
hyperregistry_chartmuseum_disk_size: 10G
hyperregistry_jobservice_disk_size: 5G
hyperregistry_database_disk_size: 10G
hyperregistry_redis_disk_size: 1G
hyperregistry_trivy_disk_size: 1G
hyperregistry_nginx_replicas: 1
hyperregistry_portal_replicas: 1
hyperregistry_core_replicas: 1
hyperregistry_jobservice_replicas: 1
hyperregistry_registry_replicas: 1
hyperregistry_chartmuseum_replicas: 1
hyperregistry_trivy_replicas: 1
hyperregistry_notary_replicas: 1
hyperregistry_release_name: hyperregistry

registry_host: 192.168.0.2:5000

#gitlab
APP_NAME: "gitlab-deploy"
SSH_PORT: 2221
NAME_SPACE: "gitlab-system"
WEB_NODE_PORT: 80
WEB_NODE_IP: "''"
STORAGE_CLASS: "csi-cephfs-sc" #"nfs" #"csi-cephfs-sc"
STORAGE: "8Gi"
RESOURCE_CPU: "1"
RESOURCE_MEM: "8Gi"
SERVICE_TYPE: "Ingress"
INGRESS_HOST: "''"
EXTERNAL_URL: "''"
KEYCLOAK_URL: "''"
KEYCLOAK_TLS_SECRET_NAME: "''"
KEYCLOAK_CLIENT: "''"
KEYCLOAK_SECRET: "''"
INGRESS_CLASS: "nginx-shd"
#nginx-controller
ingress_nginx_controller_image_repo: "{{ quay_image_repo }}/kubernetes-ingress-controller/nginx-ingress-controller"
ingress_nginx_controller_image_tag: 0.33.0
ingress_nginx_certgen_image_repo: "{{ docker_image_repo }}/jettech/kube-webhook-certgen"
ingress_nginx_certgen_image_tag: v1.2.2
ingress_nginx_http_port: 30080
ingress_nginx_https_port: 30443
ingress_nginx_service_type: LoadBalancer
#argocd
argocd_namespace: "argocd"
argocd_image_repo: "{{ quay_image_repo }}/argoproj/argocd"
argocd_image_tag: "v2.2.2"
dex_image_repo: "{{ ghcr_image_repo }}/dexidp/dex"
dex_image_tag: "v2.30.0"
redis_image_repo: "{{ docker_image_repo }}/redis"
redis_image_tag: "6.2.4-alpine"

download_defaults:
  container: false
  file: false
  repo: None
  tag: None
  enabled: false
  dest: None
  version: None
  url: None
  unarchive: false
  owner: kube
  mode: None

image_arch: "{{host_architecture | default('amd64')}}"
helm_version: "v3.5.4"
helm_download_url: "https://get.helm.sh/helm-{{ helm_version }}-linux-{{ image_arch }}.tar.gz"
helm_archive_checksums:
  arm:
    v3.5.4: 1a9cc09ef06db29a0232d265f73625056a0cb089e5a16b0a5ef8e810e0533157
  amd64:
    v3.5.4: a8ddb4e30435b5fd45308ecce5eaad676d64a5de9c89660b56face3fe990b318
  arm64:
    v3.5.4: 9db01522150a83a5d65b420171147448d8396c142d2c91af95e5ee77c1694176
helm_archive_checksum: "{{ helm_archive_checksums[image_arch][helm_version] }}"

downloads:
  helm:
    enabled: "{{ helm_enabled }}"
    file: true
    version: "{{ helm_version }}"
    dest: "{{ local_release_dir }}/helm-{{ helm_version }}/helm-{{ helm_version }}-linux-{{ image_arch }}.tar.gz"
    sha256: "{{ helm_archive_checksum }}"
    url: "{{ helm_download_url }}"
    unarchive: true
    owner: "root"
    mode: "0755"
    groups:
      - kube_control_plane
