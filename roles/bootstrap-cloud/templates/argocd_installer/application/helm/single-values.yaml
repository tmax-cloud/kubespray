spec:
  destination:
    # description: select between 'name' or 'server'
    type: name
    clusterInfo: cluster-name
  project: default

global:
  privateRegistry: test-registry.com
  adminUser: test@test.co.kr
  cluster: single
  clusterName: cluster-name
  clusterNamespace: cluster-namespace
  domain: testdomain.com
  # 사용가능한 단위: "h", "m", "s", "ms", "us", "ns"
  # ex) 3일 3시간 10분 : 75h10m
  # 기본값은 1년(8760h)
  certDuration: 8760h

modules:
  ###calico
  calico:
    enabled: false
    # 사용 가능 한 값 : Debug, Info, Warning, Error, Fatal
    logLevel: info
    logSeverityFile: info
    logSeverityScreen: info
    logSeveritySys: info

  ###ingress-nginx
  ingressNginx:
    enabled: false 
    controllerVersion: v1.5.1 
    certgenVersion: v20220916-gd32f8c343
    ingressNginxHttpPort: 30080
    ingressNginxHttpsPort: 30443
    serviceType: LoadBalancer
    logLevel: info 

  ###gitlab
  gitlab:
    enabled: false
    subdomain: gitlab
    pvc:
      storage: 30Gi
    # default로 주는 경우 default storage class를 사용
    # default를 사용하지 않고 싶은 경우에는 storage class이름을 기입
      storageClassName: "default"
    oidc:
      enabled: false

  ###gitea
  gitea:
    enabled: true
    oauth_enabled: false
    subdomain: gitea
    # "Trace", "Debug", "Info", "Warn", "Error", "Critical" or "None"
    logLevel: Info

  ### nexus
  nexus:
    enabled: false
    persistence:
      enabled: true
      storageClass: ""
    # "TRACE", "DEBUG", "INFO", "WARN", "ERROR" or "OFF"
    logLevel: INFO
    subdomain: nexus


  ### sonarqube
  sonarqube:
    enabled: false
    oidc_enabled: false
    persistence:
      enabled: true
      storageClass: ""
    # TRACE, DEBUG, INFO
    logLevel: INFO
    subdomain: sonarqube

  ### cert-manager
  certManager:
    enabled: true
    autoSync: false
    # ErrorLevel=0 WarnLevel=1 InfoLevel=2 ExtendedInfoLevel=3 DebugLevel=4 TraceLevel=5
    logLevel: 2

  ### gateway-bootstrap
  gatewayBootstrap:
    enabled: true
    autoSync: false
    # load balancer를 사용할 수 있는 경우(ex. aws lb, metallb)
    # LoadBalancer로 값을 변경
    service:
      type: LoadBalancer
    tls:
      selfsigned:
        enabled: false
      # acme로 할 경우, domain에 입력한 주소를 가지고 있어야함
      acme:
        enabled: false
        email: test@tmax.co.kr
        dns:
          type: route53
          accessKeyID: accesskey
          accessKeySecret: secretkey
          hostedZoneID: hostedzoneid
        # acme를 통한 인증서 발급의 경우, rate limit이 존재하므로 테스트를 위한 설정값이 따로 존재함
        # 자세한 내용은 https://letsencrypt.org/docs/staging-environment/#rate-limits 참조
        # staging / production 중 택1하여 기입하여야 하며, 각각 테스트용 / 운영용을 의미함
        environment: production
    console:
      enabled: false
      version: 5.2.25.0
      subdomain: console
      mcMode: true
      chatbotEmbed: true
      customProductName: hypercloud
      k8sPublicEndpoint: https://kubernetes.default.svc
      svcType: LoadBalancer
      logInfo:
        # trace | debug | info | warn | crit // 주로 "debug"를 사용
        logLevel: "info"
        # json | pretty
        logType: "pretty"
      notUseAuditlog: true
    gateway:
      enabled: true
      version: v2.8.7
      logInfo:
        # DEBUG, PANIC, FATAL, ERROR, WARN, and INFO
        logLevel: "INFO"
        # common, json
        logType: "common"

    jwtDecodeAuth:
      enabled: true
      version: 5.0.0.5
      logInfo:
        # trace | debug | info | warn | crit // 주로 "debug"를 사용
        logLevel: "info"
        # json | pretty
        logType: "pretty"

    oauth2Proxy:
      enabled: false
      version: v7.3.2
      
  ### istio version: 1.15.4 for kubeflow
  istio:
    enabled: true
    autoSync: false
    # none | error | warn | info | debug
    logLevel: info

  ### strimzi-kafka-operator
  strimziKafka:
    enabled: true
    # ERROR | WARNING | INFO | DEBUG | TRACE 반드시 대문자로 기입
    logLevel: INFO

  ### service-binding-operator
  serviceBinding:
    enabled: false
    # 사용 가능 한 값 : DEBUG, INFO, ERROR
    LOG_LEVEL: INFO

  ### hyperauth
  hyperAuth:
    enabled: false
    svcType: Ingress
    subdomain: hyperauth
    # master cluster를 위한 value, 수정 X
    storageClass: default
    # do not edit tmaxClientSecret!
    tmaxClientSecret: tmax_client_secret

    # keycloak, hyperauth, kafka, jboss 로그레벨을 하나의 환경변수로 통합 조절
    # 사용 가능 한 값 : ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE, WARN
    LOG_LEVEL: INFO
    kafka: 
      enabled: false


  ### ai-devops
  aiDevops:
    enabled: true
    hyperauthRealm: tmax
    gatekeeperLogLevel: info
    gatekeeperVersion: v1.0.2
    # 사용 가능 한 값 : debug, info, error
    logLevel: info    

  ### efk
  efk:
    enabled: false
    es:
      version: 7.2.1
      limitMemory: 8Gi
      requestMemory: 5Gi
      jvmHeap: "-Xms4g -Xmx4g"
      volumeSize: 50Gi
    busyBox:
      version: 1.32.0
    kibana:
      version: 7.2.0
      svcType: ClusterIP
      subdomain: kibana
    gatekeeper:
      version: 10.0.0
    fluentd:
      version: v1.4.2-debian-elasticsearch-1.1

  ### argocd
  argocd:
    enabled: false
    subdomain: argocd
    appsetController:
      replicas: 1
      loglevel: "info"
    redis:
      replicas: 1
      loglevel: "notice" # warning, notice, verbose, debug
    argocdServer:
      replicas: 1
      loglevel: "info" # debug, info, warn, error
    dex:
      replicas: 1
      loglevel: "info" # debug, info, warn, error
    repoServer:
      replicas: 1
      loglevel: "info" # debug, info, warn, error
    notification:
      replicas: 1
      loglevel: "info" # debug, info, warn, error
    controller:
      replicas: 1
      loglevel: "info" # debug, info, warn, error
    ingress:
      enableTraefik: true
      secretName:

  ### argorollouts
  argorollout:
    enabled: false
    subdomain: argorollouts
    rollout:
      replicas: 1
      loglevel: "info"
    rolloutDashboard:
      replicas: 1
      loglevel: "info"
    ingress:
      enableTraefik: true
      secretName:
      
  ### opensearch
  opensearch:
    enabled: true
    logLevel: info
    # opensearch-dashboards에서 지원하는 loglevel에 대한 config 설정을 기준으로 함.
    # 사용 가능한 값 : error, info, debug
    os:
      version: 1.3.7
      limitMemory: 8Gi
      requestMemory: 5Gi
      jvmHeap: "-Xms4g -Xmx4g"
      volumeSize: 50Gi
    busyBox:
      version: 1.32.0
    dashboard:
      version: 1.3.7
      svcType: ClusterIP
      subdomain: opensearch-dashboard
    fluentd:
      version: fluentd-v1.15.3-debian-elasticsearch-1.0
      # master cluster를 위한 value, 수정 X
      storageClass: default
  
  ### Loki
  loki:
    enabled: true
    logLevel: info
    # 사용 가능한 값 : error, warn, info, debug
    loki: 
      version: 2.7.1
      volumeSize: 50Gi
      storageClass: default
    promtail:
      version: 2.7.1

  ### prometheus
  prometheus:
    enabled: true
    operatorLogLevel: info
    # 사용 가능한 값 : error, warn, info, debug
    alertmanagerLogLevel: info
    # 사용 가능한 값 : error, warn, info, debug
    nodeExporterLogLevel: info
    # 사용 가능한 값 : error, warn, info, debug
    kubeStateMetricLogLevel: 0
    # 사용 가능한 값 : 0~10
    adapterLogLevel: 0
    # 사용 가능한 값 : 0~10
    prometheusLogLevel: info
    # 사용 가능한 값 : error, warn, info, debug

    versions:
      prometheus: v2.41.0
      cmReload: v0.0.1
      cmReloader: v0.62.0
      operator: v0.62.0
      alertManager: v0.25.0
      kubeRbacProxy: v0.14.0
      kubeStateMetrics: v2.7.0
      nodeExporter: v1.5.0
      adapter: v0.10.0
    pvcSize: 10Gi

  ### grafana-operator
  grafanaOperator:
    enabled: true
    subdomain: grafana
    pvcSize: 10Gi
    operator: 
      logLevel: info
      # 사용 가능한 값 : error, warn, info, debug
      version: v0.0.11
      imageRepo: docker.io/tmaxcloudck/grafana-operator
    grafana:
      logLevel: info
      # 사용 가능한 값 : error, warn, info, debug
      version: "9.3.2"
      imageRepo: docker.io/grafana/grafana

  ### grafana
  grafana:
    enabled: false
    subdomain: grafana
    pvcSize: 10Gi
    version: "9.3.2"
    imageRepo: docker.io/grafana/grafana
    
  ### service-mesh
  serviceMesh:
    ### istio
    istio:
      enabled: false
      # :(scope) 를 기준으로 앞, default, all, authn, cache, citadelclient, configmapcontroller, googleca, model, rbac, sds, secretfetcher, stsclient, stsserver, token, validation, vault
      # :(scope) 를 기준으로 뒤, debug, info, warn, error, fatal, none 
      istiodPilotDiscoveryLoglevel: default:info
      # :(scope) 를 기준으로 앞, default, all, authn, cache, citadelclient, configmapcontroller, googleca, model, rbac, sds, secretfetcher, stsclient, stsserver, token, validation, vault
      # :(scope) 를 기준으로 뒤, debug, info, warn, error, fatal, none 
      ingressgatewayPilotAgentLoglevel: default:info
      # none, error, warn, info, debug
      envoyProxyLoglevel: warning

    ### jaeger
    jaeger:
      enabled: true
      subdomain: jaeger
      # debug, info, warn, error
      jaegerCollectorLoglevel: info
      # debug, info, warn, error
      jaegerAgentLoglevel: info
      # debug, info, warn, error
      jaegerQueryLoglevel: info
      # debug, info, warning, error, fatal, panic
      gatekeeperLoglevel: info

    ### kiali
    kiali:
      enabled: true
      subdomain: kiali
      # trace, debug, info, warn, error, fatal
      kialiLoglevel: info

  ### cluster-api
  capi:
    enabled: false
    # verbose - debug(0), info(1), warning(2), error(3), fatal(4, 5, 6...)
    verbose: 1
    providers:
      aws:
        enabled: false
        credentials:
          accessKeyID: access-key
          secretAccessKeyID: secret-access-key
        # verbose - debug(0), info(1), warning(2), error(3), fatal(4, 5, 6...)
        verbose: 1
      vsphere:
        enabled: false
        credentials:
          username: "user"
          password: "password"
        # verbose - debug(0), info(1), warning(2), error(3), fatal(4, 5, 6...)
        verbose: 1

  ### template service broker
  tsb:
    enabled: false
    # version: 0.1.6 (deprecated since k8s 1.25v)
    # clusterTsb:
    #   version: 0.1.6
    templateOperator:
      version: 0.3.0
    # debug, info, warn, error, dpanic, panic, fatal 7단계, default 로 error 사용
    logLevel: info

  ### catalog controller (deprecated since k8s 1.25v)
  # catalogController:
  #   enabled: false
  #   vLevel: 0
    # (klog) verbose - 0 ~ 5 
    # klog.V(0).InfoS = klog.InfoS - Generally useful for this to always be visible to a cluster operator
    #  - Programmer errors
    #  - Logging extra info about a panic
    #  - CLI argument handling
    # klog.V(1).InfoS - A reasonable default log level if you don't want verbosity.
    #  - Information about config (listening on X, watching Y)
    #  - Errors that repeat frequently that relate to conditions that can be corrected (pod detected as unhealthy) 
    # klog.V(2).InfoS - Useful steady state information about the service and important log messages that may correlate to significant changes in the system. This is the recommended default log level for most systems.
    #  - Logging HTTP requests and their exit code
    #  - System state changing (killing pod)
    #  - Controller state change events (starting pods)
    #  - Scheduler log messages
    # klog.V(3).InfoS - Extended information about changes
    #  - More info about system state changes
    # klog.V(4).InfoS - Debug level verbosity
    #  - Logging in particularly thorny parts of code where you may want to come back later and check it
    # klog.V(5).InfoS - Trace level verbosity
    #  - Context to understand the steps leading up to errors and warnings
    #  - More information for troubleshooting reported issues

  ### helm-apiserver
  helmApiserver:
    enabled: false
    version: 0.0.5
    subdomain: helm
    # default로 주는 경우 default storage class를 사용
    # default를 사용하지 않고 싶은 경우에는 storage class이름을 기입
    storageClass: default
    # 지정 가능: fatal(0), error(1), warn(2), info(3), debug(4), trace(5)
    logLevel: error
  
  ### hypercloud
  hyperCloud:
    enabled: false
    # description: 'single' or 'multi'
    mode: multi
    kafka:
      enabled: false
    kubectl:
      timeout: 21600
    # master cluster를 위한 value, 수정 X
    storageClass: default
    
    # multi-operator의 경우, info, debug, error 기입 가능(대소문자 유의)
    multiOperator:
      logLevel: info
    # single-operator의 경우, info, debug, error 기입 가능(대소문자 유의)
    singleOperator:
      logLevel: info
    # hypercloud api server의 경우, TRACE, DEBUG, INFO, WARN, ERROR, FATAL 기입 가능(대소문자 유의)
    apiServer:
      logLevel: INFO
    # timescaledb.<테이블 이름>.chunk : 청크 테이블이 생성되는 시간 단위
    # timescaledb.<테이블 이름>.retention : 청크 테이블 보관 기간
    timescaledb:
      # timescaledb의 경우, DEBUG5, DEBUG4, DEBUG3, DEBUG2, DEBUG1, INFO, NOTICE, WARNING, ERROR, LOG, FATAL, PANIC 기입 가능(대소문자 유의)
      logLevel: WARNING
      audit:
        chunk: "7 days"
        retention: "1 years"
      event:
        chunk: "1 days"
        retention: "1 months"
      metering_hour:
        chunk: "1 days"
        retention: "1 months"
      metering_day:
        chunk: "1 months"
        retention: "1 years"
      metering_month:
        chunk: "1 years"
        retention: "1 years"
      metering_year:
        chunk: "1 years"
        retention: "10 years"

  ### hyperregistry
  hyperregistry:
    enabled: true
    core:
      subdomain: hyperregistry
    notary:
      subdomain: hyperregistry-notary
      # core, chartmuseum, jobservice, notary-server, notary-signer, registry, trivy의 경우 다음 아래의 로그레벨 설정으로 debug, info, warning, error, fatal 기입 가능 (대소문자 유의)
    mains:
      logLevel: info
    # redis의 경우 debug, verbose, notice, warning 기입 가능 (대소문자 유의, warning은 error 급) 
    redis:
      logLevel: verbose
    # database(postgres)의 경우 DEBUG5, DEBUG4, DEBUG3, DEBUG2, DEBUG1, INFO, NOTICE, WARNING, ERROR, LOG, FATAL, PANIC 기입 가능(대소문자 유의)
    database:
      logLevel: INFO
    # portal의 경우 debug, info, notice, warn, error, crit, alert, emerg 기입 가능 (대소문자 유의)
    portal:
      logLevel: info
    storageClass: default
    storageClassDatabase: default

  ### tekton pipeline
  tektonPipeline:
    enabled: true
    #namespace: tekton-pipelines
    # debug, info, warn, error / default: info
    logLevel: info

  ### tekton trigger
  tektonTrigger:
    enabled: true
    # debug, info, warn, error / default: info
    logLevel: info

  ### cicd operator
  cicd:
    enabled: true
    subdomain: cicd-webhook
    # debug, info, error / default: info
    logLevel: info

  ### redis-operator
  redis:
    enabled: true
    # info, debug, error 기입 가능(대소문자 유의)
    logLevel: info

  ### image validating webhook
  imageValidatingWebhook:
    enabled: false
    # debug, info, error 기입 가능 (대소문자 유의)
    logLevel: error

  ### nfs-subdir-external-provisioner
  nfs:
    enabled: true
    # nfs provisioner가 사용할 nfs server, ex: 192.168.7.16
    server: 192.168.7.16
    # nfs provisioner가 사용할 nfs server의 path, ex: /mnt/nfs-shared-dir
    path: /nfs-storage
    # nfs provisioner를 default storageClass로 설정
    defaultClass: not
    # logLevel 0 ~ 6 가능 (0: error, 1: info, 5: debug)
    logLevel: 0

  ### ceph-csi-cephfs
  cephfs:
    enabled: false
    # ceph clusterID(fsid)
    clusterId: 50611be6-33b3-11eb-a5cb-0894ef32cba4
    # ceph monitor들 IP:PORT
    monitors: '["192.168.7.16:3300","192.168.7.16:6789","192.168.7.17:3300","192.168.7.17:6789"]'
    # ceph admin key, /etc/ceph의 ceph.client.admin.keyring
    key: AQCeBcZftAEvExAAultsKBpNpiWWGi06Md7mmw==
    # cephfs csi를 default storageClass로 설정, ex: default / not
    defaultClass: not
    # logLevel 0 ~ 5 가능
    logLevel: 0

  ### ceph-csi-rbd
  rbd:
    enabled: false
    # ceph clusterID(fsid)
    clusterId: 50611be6-33b3-11eb-a5cb-0894ef32cba4
    # ceph monitor들 IP:PORT
    monitors: '["192.168.7.16:3300","192.168.7.16:6789","192.168.7.17:3300","192.168.7.17:6789"]'
    # ceph admin key, /etc/ceph의 ceph.client.admin.keyring
    key: AQCeBcZftAEvExAAultsKBpNpiWWGi06Md7mmw==
    # rbd csi를 default storageClass로 설정, ex: default / not
    defaultClass: not
    # logLevel 0 ~ 5 가능
    logLevel: 0
  
  ### efs-csi
  efs:
    enabled: false
    # efs ID
    fileSystemId: fs-0ce741ec0e2ea2fa2
    # efs csi를 default storageClass로 설정, ex: default / not
    defaultClass: not
    # logLevel 0 ~ 5 가능
    logLevel: 0

