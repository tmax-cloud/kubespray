apiVersion: v1
kind: Namespace
metadata:
  name: catalog

---
apiVersion: "apiextensions.k8s.io/v1beta1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.2.4"
  creationTimestamp: null
  name: "clusterservicebrokers.servicecatalog.k8s.io"
  labels:
    svcat: "true"
spec:
  group: "servicecatalog.k8s.io"
  names:
    kind: "ClusterServiceBroker"
    listKind: "ClusterServiceBrokerList"
    plural: "clusterservicebrokers"
    singular: "clusterservicebroker"
    categories:
    - "all"
    - "svcat"
  additionalPrinterColumns:
  - name: "URL"
    type: "string"
    JSONPath: ".spec.url"
  - name: "Status"
    type: "string"
    JSONPath: ".status.lastConditionState"
  - name: "Age"
    type: "date"
    JSONPath: ".metadata.creationTimestamp"
  scope: "Cluster"
  validation:
    openAPIV3Schema:
      description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema"
      properties:
        apiVersion:
          description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.apiVersion"
          type: "string"
        kind:
          description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.kind"
          type: "string"
        metadata:
          description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.metadata"
          type: "object"
        spec:
          description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec"
          properties:
            authInfo:
              description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo"
              properties:
                basic:
                  description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.basic"
                  properties:
                    secretRef:
                      description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.basic.properties.secretRef"
                      properties:
                        name:
                          description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.basic.properties.secretRef.properties.name"
                          type: "string"
                        namespace:
                          description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.basic.properties.secretRef.properties.namespace"
                          type: "string"
                      type: "object"
                  type: "object"
                bearer:
                  description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.bearer"
                  properties:
                    secretRef:
                      description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.bearer.properties.secretRef"
                      properties:
                        name:
                          description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.bearer.properties.secretRef.properties.name"
                          type: "string"
                        namespace:
                          description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.bearer.properties.secretRef.properties.namespace"
                          type: "string"
                      type: "object"
                  type: "object"
              type: "object"
            caBundle:
              description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.caBundle"
              format: "byte"
              type: "string"
            catalogRestrictions:
              description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.catalogRestrictions"
              properties:
                serviceClass:
                  description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.catalogRestrictions.properties.serviceClass"
                  items:
                    type: "string"
                  type: "array"
                servicePlan:
                  description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.catalogRestrictions.properties.servicePlan"
                  items:
                    type: "string"
                  type: "array"
              type: "object"
            insecureSkipTLSVerify:
              description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.insecureSkipTLSVerify"
              type: "boolean"
            relistBehavior:
              description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.relistBehavior"
              enum:
              - "Duration"
              - "Manual"
              type: "string"
            relistDuration:
              description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.relistDuration"
              type: "string"
            relistRequests:
              description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.relistRequests"
              format: "int64"
              type: "integer"
            url:
              description: "%clusterservicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.url"
              type: "string"
          required:
          - "url"
          type: "object"
      type: "object"
  version: "v1beta1"
  versions:
  - name: "v1beta1"
    served: true
    storage: true
  subresources:
    status: {}

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: clusterserviceclasses.servicecatalog.k8s.io
  labels:
    svcat: "true"
spec:
  group: servicecatalog.k8s.io
  names:
    kind: ClusterServiceClass
    listKind: ClusterServiceClassList
    plural: clusterserviceclasses
    singular: clusterserviceclass
    categories:
      - all
      - svcat
  scope: Cluster
  validation:
    openAPIV3Schema:
      description: ClusterServiceClass represents an offering in the service catalog.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: 'Non-namespaced.  The name of this resource in etcd is in ObjectMeta.Name. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          type: object
        spec:
          description: Spec defines the behavior of the cluster service class.
          properties:
            bindable:
              description: Bindable indicates whether a user can create bindings to an ServiceInstance provisioned from this service. ServicePlan has an optional field called Bindable which overrides the value of this field.
              type: boolean
            bindingRetrievable:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n BindingRetrievable indicates whether fetching a binding via a GET on its endpoint is supported for all plans."
              type: boolean
            clusterServiceBrokerName:
              description: "ClusterServiceBrokerName is the reference to the Broker that provides this ClusterServiceClass. \n Immutable."
              type: string
            defaultProvisionParameters:
              description: DefaultProvisionParameters are default parameters passed to the broker when an instance of this class is provisioned. Any parameters defined on the plan and instance are merged with these defaults, with plan and then instance-defined parameters taking precedence over the class defaults.
              type: object
            description:
              description: Description is a short description of this ServiceClass.
              type: string
            externalID:
              description: "ExternalID is the identity of this object for use with the OSB API. \n Immutable."
              type: string
            externalMetadata:
              description: ExternalMetadata is a blob of information about the ServiceClass, meant to be user-facing content and display instructions. This field may contain platform-specific conventional values.
              type: object
            externalName:
              description: ExternalName is the name of this object that the Service Broker exposed this Service Class as. Mutable.
              type: string
            planUpdatable:
              description: PlanUpdatable indicates whether instances provisioned from this ServiceClass may change ServicePlans after being provisioned.
              type: boolean
            requires:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n Requires exposes a list of Cloud Foundry-specific 'permissions' that must be granted to an instance of this service within Cloud Foundry.  These 'permissions' have no meaning within Kubernetes and an ServiceInstance provisioned from this ServiceClass will not work correctly."
              items:
                type: string
              type: array
            tags:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n Tags is a list of strings that represent different classification attributes of the ServiceClass.  These are used in Cloud Foundry in a way similar to Kubernetes labels, but they currently have no special meaning in Kubernetes."
              items:
                type: string
              type: array
          required:
          - bindable
          - bindingRetrievable
          - clusterServiceBrokerName
          - description
          - externalID
          - externalName
          - planUpdatable
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  additionalPrinterColumns:
    - name: External-Name
      type: string
      JSONPath: .spec.externalName
    - name: Broker
      type: string
      JSONPath: .spec.clusterServiceBrokerName
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  subresources:
    status: {}

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: clusterserviceplans.servicecatalog.k8s.io
  labels:
    svcat: "true"
spec:
  group: servicecatalog.k8s.io
  names:
    kind: ClusterServicePlan
    listKind: ClusterServicePlanList
    plural: clusterserviceplans
    singular: clusterserviceplan
    categories:
      - all
      - svcat
  scope: Cluster
  validation:
    openAPIV3Schema:
      description: ClusterServicePlan represents a tier of a ServiceClass.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: 'Non-namespaced.  The name of this resource in etcd is in ObjectMeta.Name. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          type: object
        spec:
          description: Spec defines the behavior of the service plan.
          properties:
            bindable:
              description: Bindable indicates whether a user can create bindings to an ServiceInstance using this ServicePlan.  If set, overrides the value of the corresponding ServiceClassSpec Bindable field.
              type: boolean
            clusterServiceBrokerName:
              description: ClusterServiceBrokerName is the name of the ClusterServiceBroker that offers this ClusterServicePlan.
              type: string
            clusterServiceClassRef:
              description: ClusterServiceClassRef is a reference to the service class that owns this plan.
              properties:
                name:
                  description: Name of the referent.
                  type: string
              type: object
            defaultProvisionParameters:
              description: DefaultProvisionParameters are default parameters passed to the broker when an instance of this plan is provisioned. Any parameters defined on the instance are merged with these defaults, with instance-defined parameters taking precedence over defaults.
              type: object
            description:
              description: Description is a short description of this ServicePlan.
              type: string
            externalID:
              description: "ExternalID is the identity of this object for use with the OSB API. \n Immutable."
              type: string
            externalMetadata:
              description: ExternalMetadata is a blob of information about the plan, meant to be user-facing content and display instructions.  This field may contain platform-specific conventional values.
              type: object
            externalName:
              description: ExternalName is the name of this object that the Service Broker exposed this Service Plan as. Mutable.
              type: string
            free:
              description: Free indicates whether this plan is available at no cost.
              type: boolean
            instanceCreateParameterSchema:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n InstanceCreateParameterSchema is the schema for the parameters that may be supplied when provisioning a new ServiceInstance on this plan."
              type: object
            instanceUpdateParameterSchema:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n InstanceUpdateParameterSchema is the schema for the parameters that may be updated once an ServiceInstance has been provisioned on this plan. This field only has meaning if the corresponding ServiceClassSpec is PlanUpdatable."
              type: object
            serviceBindingCreateParameterSchema:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n ServiceBindingCreateParameterSchema is the schema for the parameters that may be supplied binding to a ServiceInstance on this plan."
              type: object
          required:
          - clusterServiceBrokerName
          - clusterServiceClassRef
          - description
          - externalID
          - externalName
          - free
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  additionalPrinterColumns:
    - name: External-Name
      type: string
      JSONPath: .spec.externalName
    - name: Broker
      type: string
      JSONPath: .spec.clusterServiceBrokerName
    - name: Class
      type: string
      JSONPath: .spec.clusterServiceClassRef.name
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  subresources:
    status: {}

---
apiVersion: "apiextensions.k8s.io/v1beta1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.2.4"
  creationTimestamp: null
  name: "servicebindings.servicecatalog.k8s.io"
  labels:
    svcat: "true"
spec:
  group: "servicecatalog.k8s.io"
  names:
    kind: "ServiceBinding"
    listKind: "ServiceBindingList"
    plural: "servicebindings"
    singular: "servicebinding"
    categories:
    - "all"
    - "svcat"
  scope: "Namespaced"
  validation:
    openAPIV3Schema:
      description: "%servicebinding.yaml.spec.validation.openAPIV3Schema"
      properties:
        apiVersion:
          description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.apiVersion"
          type: "string"
        kind:
          description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.kind"
          type: "string"
        metadata:
          type: "object"
        spec:
          description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec"
          properties:
            instanceRef:
              description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.instanceRef"
              properties:
                name:
                  description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.instanceRef.properties.name"
                  type: "string"
              type: "object"
            parameters:
              description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parameters"
              additionalProperties:
                anyOf:
                - type: "integer"
                - type: "string"
                x-kubernetes-int-or-string: true
              type: "object"
            parametersFrom:
              description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parametersFrom"
              items:
                description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parametersFrom.items"
                properties:
                  secretKeyRef:
                    description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parametersFrom.items.properties.secretKeyRef"
                    properties:
                      key:
                        description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parametersFrom.items.properties.secretKeyRef.properties.key"
                        type: "string"
                      name:
                        description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parametersFrom.items.properties.secretKeyRef.properties.name"
                        type: "string"
                    required:
                    - "key"
                    - "name"
                    type: "object"
                type: "object"
              type: "array"
            secretName:
              description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretName"
              type: "string"
            secretTransforms:
              description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms"
              items:
                description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items"
                properties:
                  addKey:
                    description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.addKey"
                    properties:
                      jsonPathExpression:
                        description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.addKey.properties.jsonPathExpression"
                        type: "string"
                      key:
                        description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.addKey.properties.key"
                        type: "string"
                      stringValue:
                        description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.addKey.properties.stringValue"
                        type: "string"
                      value:
                        description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.addKey.properties.value"
                        format: "byte"
                        type: "string"
                    required:
                    - "jsonPathExpression"
                    - "key"
                    - "stringValue"
                    - "value"
                    type: "object"
                  addKeysFrom:
                    description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.addKeysFrom"
                    properties:
                      secretRef:
                        description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.addKeysFrom.properties.secretRef"
                        properties:
                          name:
                            description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.addKeysFrom.properties.secretRef.properties.name"
                            type: "string"
                          namespace:
                            description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.addKeysFrom.properties.secretRef.properties.namespace"
                            type: "string"
                        type: "object"
                    type: "object"
                  removeKey:
                    description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.removeKey"
                    properties:
                      key:
                        description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.removeKey.properties.key"
                        type: "string"
                    required:
                    - "key"
                    type: "object"
                  renameKey:
                    description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.renameKey"
                    properties:
                      from:
                        description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.renameKey.properties.from"
                        type: "string"
                      to:
                        description: "%servicebinding.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.secretTransforms.items.properties.renameKey.properties.to"
                        type: "string"
                    required:
                    - "from"
                    - "to"
                    type: "object"
                type: "object"
              type: "array"
          required:
          - "instanceRef"
          type: "object"
      type: "object"
  version: "v1beta1"
  versions:
  - name: "v1beta1"
    served: true
    storage: true
  additionalPrinterColumns:
  - name: "Service-Instance"
    type: "string"
    JSONPath: ".spec.instanceRef.name"
  - name: "Secret-Name"
    type: "string"
    JSONPath: ".spec.secretName"
  - name: "Status"
    type: "string"
    JSONPath: ".status.lastConditionState"
  - name: "Age"
    type: "date"
    JSONPath: ".metadata.creationTimestamp"
  subresources:
    status: {}

---
apiVersion: "apiextensions.k8s.io/v1beta1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.2.4"
  creationTimestamp: null
  name: "servicebrokers.servicecatalog.k8s.io"
  labels:
    svcat: "true"
spec:
  group: "servicecatalog.k8s.io"
  names:
    kind: "ServiceBroker"
    listKind: "ServiceBrokerList"
    plural: "servicebrokers"
    singular: "servicebroker"
    categories:
    - "all"
    - "svcat"
  scope: "Namespaced"
  validation:
    openAPIV3Schema:
      description: "%servicebroker.yaml.spec.validation.openAPIV3Schema"
      properties:
        apiVersion:
          description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.apiVersion"
          type: "string"
        kind:
          description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.kind"
          type: "string"
        metadata:
          description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.metadata"
          type: "object"
        spec:
          description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec"
          properties:
            authInfo:
              description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo"
              properties:
                basic:
                  description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.basic"
                  properties:
                    secretRef:
                      description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.basic.properties.secretRef"
                      properties:
                        name:
                          description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.basic.properties.secretRef.properties.name"
                          type: "string"
                      type: "object"
                  type: "object"
                bearer:
                  description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.bearer"
                  properties:
                    secretRef:
                      description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.bearer.properties.secretRef"
                      properties:
                        name:
                          description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.authInfo.properties.bearer.properties.secretRef.properties.name"
                          type: "string"
                      type: "object"
                  type: "object"
              type: "object"
            caBundle:
              description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.caBundle"
              format: "byte"
              type: "string"
            catalogRestrictions:
              description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.catalogRestrictions"
              properties:
                serviceClass:
                  description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.catalogRestrictions.properties.serviceClass"
                  items:
                    type: "string"
                  type: "array"
                servicePlan:
                  description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.catalogRestrictions.properties.servicePlan"
                  items:
                    type: "string"
                  type: "array"
              type: "object"
            insecureSkipTLSVerify:
              description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.insecureSkipTLSVerify"
              type: "boolean"
            relistBehavior:
              description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.relistBehavior"
              enum:
              - "Duration"
              - "Manual"
              type: "string"
            relistDuration:
              description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.relistDuration"
              type: "string"
            relistRequests:
              description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.relistRequests"
              format: "int64"
              type: "integer"
            url:
              description: "%servicebroker.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.url"
              type: "string"
          required:
          - "url"
          type: "object"
      type: "object"
  version: "v1beta1"
  versions:
  - name: "v1beta1"
    served: true
    storage: true
  additionalPrinterColumns:
  - name: "URL"
    type: "string"
    JSONPath: ".spec.url"
  - name: "Status"
    type: "string"
    JSONPath: ".status.lastConditionState"
  - name: "Age"
    type: "date"
    JSONPath: ".metadata.creationTimestamp"
  subresources:
    status: {}

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: serviceclasses.servicecatalog.k8s.io
  labels:
    svcat: "true"
spec:
  group: servicecatalog.k8s.io
  names:
    kind: ServiceClass
    listKind: ServiceClassList
    plural: serviceclasses
    singular: serviceclass
    categories:
      - all
      - svcat
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ServiceClass represents a namespaced offering in the service catalog.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: 'The name of this resource in etcd is in ObjectMeta.Name. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          type: object
        spec:
          description: Spec defines the behavior of the service class.
          properties:
            bindable:
              description: Bindable indicates whether a user can create bindings to an ServiceInstance provisioned from this service. ServicePlan has an optional field called Bindable which overrides the value of this field.
              type: boolean
            bindingRetrievable:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n BindingRetrievable indicates whether fetching a binding via a GET on its endpoint is supported for all plans."
              type: boolean
            defaultProvisionParameters:
              description: DefaultProvisionParameters are default parameters passed to the broker when an instance of this class is provisioned. Any parameters defined on the plan and instance are merged with these defaults, with plan and then instance-defined parameters taking precedence over the class defaults.
              type: object
            description:
              description: Description is a short description of this ServiceClass.
              type: string
            externalID:
              description: "ExternalID is the identity of this object for use with the OSB API. \n Immutable."
              type: string
            externalMetadata:
              description: ExternalMetadata is a blob of information about the ServiceClass, meant to be user-facing content and display instructions. This field may contain platform-specific conventional values.
              type: object
            externalName:
              description: ExternalName is the name of this object that the Service Broker exposed this Service Class as. Mutable.
              type: string
            planUpdatable:
              description: PlanUpdatable indicates whether instances provisioned from this ServiceClass may change ServicePlans after being provisioned.
              type: boolean
            requires:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n Requires exposes a list of Cloud Foundry-specific 'permissions' that must be granted to an instance of this service within Cloud Foundry.  These 'permissions' have no meaning within Kubernetes and an ServiceInstance provisioned from this ServiceClass will not work correctly."
              items:
                type: string
              type: array
            serviceBrokerName:
              description: "ServiceBrokerName is the reference to the Broker that provides this ServiceClass. \n Immutable."
              type: string
            tags:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n Tags is a list of strings that represent different classification attributes of the ServiceClass.  These are used in Cloud Foundry in a way similar to Kubernetes labels, but they currently have no special meaning in Kubernetes."
              items:
                type: string
              type: array
          required:
          - bindable
          - bindingRetrievable
          - description
          - externalID
          - externalName
          - planUpdatable
          - serviceBrokerName
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  additionalPrinterColumns:
    - name: External-Name
      type: string
      JSONPath: .spec.externalName
    - name: Broker
      type: string
      JSONPath: .spec.serviceBrokerName
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  subresources:
    status: {}

---
apiVersion: "apiextensions.k8s.io/v1beta1"
kind: "CustomResourceDefinition"
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: "v0.2.4"
  creationTimestamp: null
  name: "serviceinstances.servicecatalog.k8s.io"
  labels:
    svcat: "true"
spec:
  group: "servicecatalog.k8s.io"
  names:
    kind: "ServiceInstance"
    listKind: "ServiceInstanceList"
    plural: "serviceinstances"
    singular: "serviceinstance"
    categories:
    - "all"
    - "svcat"
  scope: "Namespaced"
  validation:
    openAPIV3Schema:
      description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema"
      properties:
        apiVersion:
          description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.apiVersion"
          type: "string"
        kind:
          description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.kind"
          type: "string"
        metadata:
          type: "object"
        spec:
          description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec"
          properties:
            clusterServiceClassExternalID:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.clusterServiceClassExternalID"
              type: "string"
            clusterServiceClassExternalName:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.clusterServiceClassExternalName"
              type: "string"
            clusterServiceClassName:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.clusterServiceClassName"
              type: "string"
            clusterServiceClassRef:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.clusterServiceClassRef"
              properties:
                name:
                  description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.clusterServiceClassRef.properties.name"
                  type: "string"
              type: "object"
            clusterServicePlanExternalID:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.clusterServicePlanExternalID"
              type: "string"
            clusterServicePlanExternalName:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.clusterServicePlanExternalName"
              type: "string"
            clusterServicePlanName:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.clusterServicePlanName"
              type: "string"
            clusterServicePlanRef:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.clusterServicePlanRef"
              properties:
                name:
                  description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.clusterServicePlanRef.properties.name"
                  type: "string"
              type: "object"
            externalID:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.externalID"
              type: "string"
            parameters:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parameters"
              additionalProperties:
                anyOf:
                - type: "integer"
                - type: "string"
                x-kubernetes-int-or-string: true
              type: "object"
            parametersFrom:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parametersFrom"
              items:
                description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parametersFrom.items"
                properties:
                  secretKeyRef:
                    description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parametersFrom.items.properties.secretKeyRef"
                    properties:
                      key:
                        description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parametersFrom.items.properties.secretKeyRef.properties.key"
                        type: "string"
                      name:
                        description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.parametersFrom.items.properties.secretKeyRef.properties.name"
                        type: "string"
                    required:
                    - "key"
                    - "name"
                    type: "object"
                type: "object"
              type: "array"
            serviceClassExternalID:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.serviceClassExternalID"
              type: "string"
            serviceClassExternalName:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.serviceClassExternalName"
              type: "string"
            serviceClassName:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.serviceClassName"
              type: "string"
            serviceClassRef:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.serviceClassRef"
              properties:
                name:
                  description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.serviceClassRef.properties.name"
                  type: "string"
              type: "object"
            servicePlanExternalID:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.servicePlanExternalID"
              type: "string"
            servicePlanExternalName:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.servicePlanExternalName"
              type: "string"
            servicePlanName:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.servicePlanName"
              type: "string"
            servicePlanRef:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.servicePlanRef"
              properties:
                name:
                  description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.servicePlanRef.properties.name"
                  type: "string"
              type: "object"
            updateRequests:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.updateRequests"
              format: "int64"
              type: "integer"
            userInfo:
              description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.userInfo"
              properties:
                extra:
                  additionalProperties:
                    description: "%serviceinstance.yaml.spec.validation.openAPIV3Schema.properties.spec.properties.userInfo.properties.extra.additionalProperties"
                    items:
                      type: "string"
                    type: "array"
                  type: "object"
                groups:
                  items:
                    type: "string"
                  type: "array"
                uid:
                  type: "string"
                username:
                  type: "string"
              required:
              - "uid"
              - "username"
              type: "object"
          type: "object"
      type: "object"
  version: "v1beta1"
  versions:
  - name: "v1beta1"
    served: true
    storage: true
  additionalPrinterColumns:
  - name: "Class"
    type: "string"
    JSONPath: ".status.userSpecifiedClassName"
  - name: "Plan"
    type: "string"
    JSONPath: ".status.userSpecifiedPlanName"
  - name: "Status"
    type: "string"
    JSONPath: ".status.lastConditionState"
  - name: "Age"
    type: "date"
    JSONPath: ".metadata.creationTimestamp"
  subresources:
    status: {}

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: serviceplans.servicecatalog.k8s.io
  labels:
    svcat: "true"
spec:
  group: servicecatalog.k8s.io
  names:
    kind: ServicePlan
    listKind: ServicePlanList
    plural: serviceplans
    singular: serviceplan
    categories:
      - all
      - svcat
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ServicePlan represents a tier of a ServiceClass.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          description: 'Non-namespaced.  The name of this resource in etcd is in ObjectMeta.Name. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata'
          type: object
        spec:
          description: Spec defines the behavior of the service plan.
          properties:
            bindable:
              description: Bindable indicates whether a user can create bindings to an ServiceInstance using this ServicePlan.  If set, overrides the value of the corresponding ServiceClassSpec Bindable field.
              type: boolean
            defaultProvisionParameters:
              description: DefaultProvisionParameters are default parameters passed to the broker when an instance of this plan is provisioned. Any parameters defined on the instance are merged with these defaults, with instance-defined parameters taking precedence over defaults.
              type: object
            description:
              description: Description is a short description of this ServicePlan.
              type: string
            externalID:
              description: "ExternalID is the identity of this object for use with the OSB API. \n Immutable."
              type: string
            externalMetadata:
              description: ExternalMetadata is a blob of information about the plan, meant to be user-facing content and display instructions.  This field may contain platform-specific conventional values.
              type: object
            externalName:
              description: ExternalName is the name of this object that the Service Broker exposed this Service Plan as. Mutable.
              type: string
            free:
              description: Free indicates whether this plan is available at no cost.
              type: boolean
            instanceCreateParameterSchema:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n InstanceCreateParameterSchema is the schema for the parameters that may be supplied when provisioning a new ServiceInstance on this plan."
              type: object
            instanceUpdateParameterSchema:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n InstanceUpdateParameterSchema is the schema for the parameters that may be updated once an ServiceInstance has been provisioned on this plan. This field only has meaning if the corresponding ServiceClassSpec is PlanUpdatable."
              type: object
            serviceBindingCreateParameterSchema:
              description: "Currently, this field is ALPHA: it may change or disappear at any time and its data will not be migrated. \n ServiceBindingCreateParameterSchema is the schema for the parameters that may be supplied binding to a ServiceInstance on this plan."
              type: object
            serviceBrokerName:
              description: ServiceBrokerName is the name of the ServiceBroker that offers this ServicePlan.
              type: string
            serviceClassRef:
              description: ServiceClassRef is a reference to the service class that owns this plan.
              properties:
                name:
                  description: Name of the referent.
                  type: string
              type: object
          required:
          - description
          - externalID
          - externalName
          - free
          - serviceBrokerName
          - serviceClassRef
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  additionalPrinterColumns:
    - name: External-Name
      type: string
      JSONPath: .spec.externalName
    - name: Broker
      type: string
      JSONPath: .spec.serviceBrokerName
    - name: Class
      type: string
      JSONPath: .spec.serviceClassRef.name
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  subresources:
    status: {}

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: catalog-webhook-cert
  namespace: catalog
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  secretName: catalog-webhook-cert 
  usages:
    - digital signature
    - key encipherment
    - server auth
    - client auth
  dnsNames:
    - "catalog-catalog-webhook.catalog.svc"
  issuerRef:
    kind: ClusterIssuer
    group: cert-manager.io
    name: tmaxcloud-issuer

---
# The SA for the controller-manager
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "service-catalog-controller-manager"
  namespace: "catalog"
---
# The SA for the webhook service
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "service-catalog-webhook"
  namespace: "catalog"

---
### Controller-Manager ###

# controller-manager role defines what access the service-catalog
# controller-manager needs to manage the resources of the
# service-catalog

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: "servicecatalog.k8s.io:controller-manager"
rules:
    - apiGroups: [""]
      resources: ["events"]
      verbs:     ["create","patch","update"]
    # TODO: do not grant global access, limit to particular secrets referenced from servicebindings
    - apiGroups: [""]
      resources: ["secrets"]
      verbs:     ["get","create","update","delete", "list", "watch"]
    - apiGroups: [""]
      resources: ["pods"]
      verbs:     ["get","list","update", "patch", "watch", "delete", "initialize"]
    - apiGroups: [""]
      resources: ["namespaces"]
      verbs:     ["get","list","watch"]
    - apiGroups: ["apiextensions.k8s.io"]
      resources: ["customresourcedefinitions"]
      verbs:     ["list"]
    # access to our service-catalog types
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["clusterserviceclasses"]
      verbs:     ["get","list","watch","create","patch","update","delete"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["clusterserviceplans"]
      verbs:     ["get","list","watch","create","patch","update","delete"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["clusterservicebrokers"]
      verbs:     ["get","list","watch", "update"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["serviceinstances"]
      verbs:     ["get","list","watch", "update"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["servicebindings"]
      verbs:     ["get","list","watch", "update", "delete"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["clusterservicebrokers/status","clusterserviceclasses/status","clusterserviceplans/status","serviceinstances/status","servicebindings/status"]
      verbs:     ["update"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["serviceclasses"]
      verbs:     ["get","list","watch","create","patch","update","delete"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["serviceplans"]
      verbs:     ["get","list","watch","create","patch","update","delete"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["servicebrokers"]
      verbs:     ["get","list","watch", "update"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["servicebrokers/status","serviceclasses/status","serviceplans/status"]
      verbs:     ["update"]

---

# give the controller-manager service account access to whats defined in its role.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: "servicecatalog.k8s.io:controller-manager"
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: "servicecatalog.k8s.io:controller-manager"
subjects:
    - apiGroup: ""
      kind: ServiceAccount
      name: "service-catalog-controller-manager"
      namespace: "catalog"

---

# This gives create/update access to configmaps
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    name: "servicecatalog.k8s.io:cluster-info-configmap"
    namespace: "catalog"
rules:
    - apiGroups:     [""]
      resources:     ["configmaps"]
      resourceNames: ["cluster-info"]
      verbs:         ["get","create","list","watch","update"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: service-catalog-controller-manager-cluster-info
    namespace: "catalog"
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: "servicecatalog.k8s.io:cluster-info-configmap"
subjects:
    - apiGroup: ""
      kind: ServiceAccount
      name: "service-catalog-controller-manager"
      namespace: "catalog"

---

# This gives create/update access to configmaps in deployment namespace for leader election
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
    name: "servicecatalog.k8s.io:leader-locking-controller-manager"
    namespace: "catalog"
rules:
    - apiGroups: [""]
      resources: ["configmaps"]
      verbs:     ["create"]
    - apiGroups:     [""]
      resources:     ["configmaps"]
      resourceNames: ["service-catalog-controller-manager"]
      verbs:         ["get","update"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
    name: service-catalog-controller-manager-leader-election
    namespace: "catalog"
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: "servicecatalog.k8s.io:leader-locking-controller-manager"
subjects:
    - apiGroup: ""
      kind: ServiceAccount
      name: "service-catalog-controller-manager"
      namespace: "catalog"

---

# This allows anyone to get the Service Catalog readiness probe
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: "servicecatalog.k8s.io:service-catalog-readiness"
rules:
    - nonResourceURLs:
          - /healthz/ready
      verbs:
          - get

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: "servicecatalog.k8s.io:service-catalog-readiness"
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: "servicecatalog.k8s.io:service-catalog-readiness"
subjects:
    - apiGroup: rbac.authorization.k8s.io
      kind: Group
      name: system:unauthenticated
    - apiGroup: rbac.authorization.k8s.io
      kind: Group
      name: system:authenticated

---

### Webhook ###
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
    name: "servicecatalog.k8s.io:webhook"
rules:
    # access to our service-catalog types
    - apiGroups: ["apiextensions.k8s.io"]
      resources: ["customresourcedefinitions"]
      verbs:     ["list"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["clusterserviceclasses"]
      verbs:     ["get","list","watch"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["clusterserviceplans"]
      verbs:     ["get","list","watch"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["clusterservicebrokers"]
      verbs:     ["get","list","watch"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["serviceinstances","servicebindings"]
      verbs:     ["get","list","watch"]
    - apiGroups: ["authorization.k8s.io"]
      resources: ["subjectaccessreviews"]
      verbs:     ["get","list","create"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["serviceclasses"]
      verbs:     ["get","list","watch"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["serviceplans"]
      verbs:     ["get","list","watch"]
    - apiGroups: ["servicecatalog.k8s.io"]
      resources: ["servicebrokers"]
      verbs:     ["get","list","watch"]

---

# give the webhook service account access to whats defined in its role.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
    name: "servicecatalog.k8s.io:webhook"
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: "servicecatalog.k8s.io:webhook"
subjects:
    - apiGroup: ""
      kind: ServiceAccount
      name: "service-catalog-webhook"
      namespace: "catalog"

---
kind: Service
apiVersion: v1
metadata:
  name: catalog-catalog-controller-manager
  namespace: catalog
  labels:
    app: catalog-catalog-controller-manager
    chart: "catalog-0.3.0"
    release: "catalog"
    heritage: "Tiller"
spec:
  type: ClusterIP
  selector:
    app: catalog-catalog-controller-manager
  ports:
  - name: secure
    protocol: TCP
    port: 443
    targetPort: 8444

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: catalog-catalog-webhook
  namespace: "catalog"
  annotations:
    cert-manager.io/inject-ca-from: catalog/catalog-webhook-cert
webhooks:
- name: mutating.clusterservicebrokers.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/mutating-clusterservicebrokers"
  failurePolicy: Fail
  rules:
  - operations: [ "CREATE", "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["clusterservicebrokers"]
- name: mutating.clusterserviceclasses.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/mutating-clusterserviceclasses"
  failurePolicy: Fail
  rules:
  - operations: [ "CREATE", "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["clusterserviceclasses"]
- name: mutating.serviceclasses.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/mutating-serviceclasses"
  failurePolicy: Fail
  rules:
  - operations: [ "CREATE", "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["serviceclasses"]
- name: mutating.clusterserviceplans.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/mutating-clusterserviceplans"
  failurePolicy: Fail
  rules:
  - operations: [ "CREATE", "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["clusterserviceplans"]
- name: mutating.serviceplans.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/mutating-serviceplans"
  failurePolicy: Fail
  rules:
  - operations: [ "CREATE", "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["serviceplans"]
- name: mutating.servicebindings.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/mutating-servicebindings"
  failurePolicy: Fail
  rules:
  - operations: [ "CREATE", "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["servicebindings"]
- name: mutating.servicebrokers.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/mutating-servicebrokers"
  failurePolicy: Fail
  rules:
  - operations: [ "CREATE", "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["servicebrokers"]
- name: mutating.serviceinstances.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/mutating-serviceinstances"
  failurePolicy: Fail
  rules:
  - operations: [ "CREATE", "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["serviceinstances"]
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: catalog-catalog-validating-webhook
  namespace: "catalog"
  annotations:
    cert-manager.io/inject-ca-from: catalog/catalog-webhook-cert
webhooks:
- name: validating.status.servicebindings.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-servicebindings/status"
  failurePolicy: Fail
  rules:
  - operations: [ "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["servicebindings/status"]
- name: validating.status.servicbrokers.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-servicebrokers/status"
  failurePolicy: Fail
  rules:
  - operations: [ "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["servicebrokers/status"]
- name: validating.status.clusterservicbrokers.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-clusterservicebrokers/status"
  failurePolicy: Fail
  rules:
  - operations: [ "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["clusterservicebrokers/status"]
- name: validating.serviceinstances.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-serviceinstances"
  failurePolicy: Fail
  rules:
  - operations: [ "CREATE", "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["serviceinstances"]
- name: validating.clusterservicebrokers.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-clusterservicebrokers"
  failurePolicy: Fail
  rules:
    - operations: [ "CREATE", "UPDATE" ]
      apiGroups: ["servicecatalog.k8s.io"]
      apiVersions: ["v1beta1"]
      resources: ["clusterservicebrokers"]
- name: validating.servicebindings.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-servicebindings"
  failurePolicy: Fail
  rules:
  - operations: [ "CREATE", "UPDATE" ]
    apiGroups: ["servicecatalog.k8s.io"]
    apiVersions: ["v1beta1"]
    resources: ["servicebindings"]
- name: validating.servicebrokers.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-servicebrokers"
  failurePolicy: Fail
  rules:
    - operations: [ "CREATE", "UPDATE" ]
      apiGroups: ["servicecatalog.k8s.io"]
      apiVersions: ["v1beta1"]
      resources: ["servicebrokers"]
- name: validating.serviceclasses.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-serviceclasses"
  failurePolicy: Fail
  rules:
    - operations: [ "CREATE", "UPDATE" ]
      apiGroups: ["servicecatalog.k8s.io"]
      apiVersions: ["v1beta1"]
      resources: ["serviceclasses"]
- name: validating.clusterserviceclasses.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-clusterserviceclasses"
  failurePolicy: Fail
  rules:
    - operations: [ "CREATE", "UPDATE" ]
      apiGroups: ["servicecatalog.k8s.io"]
      apiVersions: ["v1beta1"]
      resources: ["clusterserviceclasses"]
- name: validating.serviceplans.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-serviceplans"
  failurePolicy: Fail
  rules:
    - operations: [ "CREATE", "UPDATE" ]
      apiGroups: ["servicecatalog.k8s.io"]
      apiVersions: ["v1beta1"]
      resources: ["serviceplans"]
- name: validating.clusterserviceplans.servicecatalog.k8s.io
  clientConfig:
    service:
      name: catalog-catalog-webhook
      namespace: "catalog"
      path: "/validating-clusterserviceplans"
  failurePolicy: Fail
  rules:
    - operations: [ "CREATE", "UPDATE" ]
      apiGroups: ["servicecatalog.k8s.io"]
      apiVersions: ["v1beta1"]
      resources: ["clusterserviceplans"]

---
kind: Service
apiVersion: v1
metadata:
  name: catalog-catalog-webhook
  namespace: "catalog"
  labels:
    app: catalog-catalog-webhook
    chart: "catalog-0.3.0"
    release: "catalog"
    heritage: "Tiller"
spec:
  type: ClusterIP
  selector:
    app: catalog-catalog-webhook
  ports:
  - name: secure
    protocol: TCP
    port: 443
    targetPort: 8443
  - name: probe
    port: 80
    targetPort: 8081