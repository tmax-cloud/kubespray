apiVersion: v1
kind: Namespace
metadata:
  name: hyperauth
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hyperauth-admin
  namespace: hyperauth
automountServiceAccountToken: false
secrets:
  - name: hyperauth-admin-token
---
apiVersion: v1
kind: Secret
metadata:
  name: hyperauth-admin-token
  namespace: hyperauth
  annotations:
    kubernetes.io/service-account.name: hyperauth-admin
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hyperauth-pod-checker
rules:
  - apiGroups:
      - ""
    resources:
      - "pods"
    verbs:
      #   - "get"
      - "list"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hyperauth-pod-checker
subjects:
  - kind: ServiceAccount
    name: hyperauth-admin
    namespace: hyperauth
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: hyperauth-pod-checker
---
apiVersion: v1
kind: Secret
metadata:
  name: passwords
  namespace: hyperauth
type: Opaque
data:
  CERTS_PASSWORD: dG1heEAyMw==
  HYPERAUTH_PASSWORD: YWRtaW4=
  HYPERAUTH_ADMIN: YWRtaW4=
  DB_PASSWORD: a2V5Y2xvYWs=
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: hyperauth
  labels:
    app: postgresql
spec:
  ports:
    - port: 5432
      nodePort: 31226
  selector:
    app: postgresql
    tier: postgreSQL
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: hyperauth
  namespace: hyperauth
  labels:
    app: keycloak
  annotations:
    traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
    traefik.ingress.kubernetes.io/service.sticky.cookie.name: hyperauth
    traefik.ingress.kubernetes.io/service.sticky.cookie.secure: "true"
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: https
      port: 443
      targetPort: 8443
  selector:
    app: hyperauth
  type: ClusterIP   # ClusterIP or LoadBalancer or NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tmax-import-realm-config
  namespace: hyperauth
data:
  tmax-realm.json: |
    {
      "id": "tmax",
      "realm": "tmax",
      "displayName": "tmax",
      "notBefore": 1706769906,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": true,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": true,
      "registrationEmailAsUsername": false,
      "rememberMe": true,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": true,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "users": [
      {
        "id" : "36635ae7-fa27-4399-842a-e044f1a4a6a4",
        "username" : "hc-admin@tmax.co.kr",
        "enabled" : true,
        "totp" : false,
        "emailVerified" : true,
        "email" : "hc-admin@tmax.co.kr",
        "attributes" : {
          "lastPasswordUpdateTime" : [ "1642742685003" ]
        },
        "credentials" : [ {
          "id" : "1455bc09-78b7-461f-8deb-b78810c3fc78",
          "type" : "password",
          "createdDate" : 1642742684995,
          "secretData" : "{\"value\":\"a4a8RxdwjCK/c/XMebrs7vxbbrtfbyoPi7vhIJq9lPTYBytNiEY02QRXZ0OAKP0tcVcAmfNRgQkNdqRmD9QZlg==\",\"salt\":\"Z1bYMhjZiuUekrX5MZr1Gg==\"}",
          "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
        } ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "clientRoles" : {
          "account" : [ "manage-account", "view-profile" ],
          "jaeger" : [ "jaeger-manager" ]
        },
        "clientConsents" : [ ],
        "notBefore" : 0,
        "groups" : [ "/hypercloud5", "/argocd-admin" ]
      }
      ],
      "roles": {
      "realm": [
        {
          "id": "5443e0f9-f001-42f2-8081-34faf13af1cb",
          "name": "hyperauth tmax realm all role",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "impersonation",
                "view-users",
                "manage-events",
                "manage-realm",
                "view-realm",
                "query-realms",
                "view-authorization",
                "view-events",
                "manage-authorization",
                "query-groups",
                "create-client",
                "view-clients",
                "manage-clients",
                "query-users",
                "manage-users",
                "view-identity-providers",
                "manage-identity-providers",
                "query-clients",
                "realm-admin"
              ]
            }
          },
          "clientRole": false,
          "containerId": "tmax",
          "attributes": {}
        },
        {
          "id": "b8e820aa-4869-4a3d-a20c-4ea8448969c1",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "tmax",
          "attributes": {}
        },
        {
          "id": "8a735a15-d35b-4231-b38b-8fc322d64834",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "tmax",
          "attributes": {}
        },
        {
          "id": "593e228f-f76c-4b86-bbec-0bc896729ad5",
          "name": "default-roles-tmax",
          "description": "${role_default-roles}",
          "composite": true,
          "composites": {
            "realm": [
              "offline_access",
              "uma_authorization"
            ],
            "client": {
              "account": [
                "view-profile",
                "manage-account"
              ]
            }
          },
          "clientRole": false,
          "containerId": "tmax",
          "attributes": {}
        },
        {
          "id": "133608c3-5fd4-4a06-93ef-a0852f8af9e8",
          "name": "admin",
          "composite": false,
          "clientRole": false,
          "containerId": "tmax",
          "attributes": {}
        },
        {
          "id": "11fdf2df-3500-4180-aa9c-259309ca0c83",
          "name": "hyperauth tmax realm user all role",
          "composite": false,
          "clientRole": false,
          "containerId": "tmax",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "270c58f6-10b2-4b1c-b851-233156254529",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "fe9b3e73-16c5-449c-9a14-8d1dfee547a7",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-users",
                  "query-groups"
                ]
              }
            },
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "ca0c5a5c-cccc-4ef8-8028-0dc40c2a7667",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "0cbba21f-7082-4935-aabc-3d96236de6a1",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "c3aba9c1-279f-41e0-94ac-000897c08aac",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "7d29e1f7-7c06-49f4-8f4d-f5a97c28e5e3",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "17b9864d-af8e-450d-9e62-d1937b2779a9",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "669cae11-02df-4eba-a1dd-265f21d4eba4",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "fb5b3d74-f0b0-4b62-bc8c-f7940b73842a",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "d0a64949-9fe0-4095-8487-4e4858eda33a",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "e8ab27be-fbf3-4ec4-bf9e-6acc04c98c03",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "8ab19e83-4736-42f7-97d4-8ec613c68f1c",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "ade602fc-0b50-40ac-b258-dea2cb829d5e",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "1d95760a-c194-43c8-98b4-634bb69d908e",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "f2d2f926-e113-448a-ae67-9459e2a2403c",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "f8324f64-c984-4776-bba8-955ef5a8e71e",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "2fae8d13-6cd7-400b-ada1-69ca4dde2f04",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "26c7a320-47e7-4cd3-a9f8-6508b1f1bcf8",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          },
          {
            "id": "e84173d2-7bf9-4643-bd90-2113a06173b1",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "impersonation",
                  "view-users",
                  "manage-events",
                  "manage-realm",
                  "view-realm",
                  "query-realms",
                  "view-authorization",
                  "view-events",
                  "manage-authorization",
                  "query-groups",
                  "create-client",
                  "view-clients",
                  "manage-clients",
                  "query-users",
                  "manage-users",
                  "view-identity-providers",
                  "manage-identity-providers",
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
            "attributes": {}
          }
        ],
        "sonarqube": [],
        "grafana": [],
        "hyperregistry": [],
        "security-admin-console": [],
        "argocd": [],
        "admin-cli": [],
        "gitlab": [],
        "gitea": [],
        "account-console": [],
        "broker": [
          {
            "id": "c09fd88b-fbd9-4a45-8410-6dc91764d559",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "7470228f-e009-4dd4-a9a2-ee3cf0a60d7c",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "29e0e0db-ecfe-4b6c-9686-74de644b0ae4",
            "name": "view-groups",
            "description": "${role_view-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "e0380017-a35b-4381-a9da-ed81d28022aa",
            "attributes": {}
          },
          {
            "id": "5748a2dc-5dcf-4798-aaac-7fb9ff9a9012",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "e0380017-a35b-4381-a9da-ed81d28022aa",
            "attributes": {}
          },
          {
            "id": "6ebbe3ac-5812-4a3d-a765-2f1c601ef292",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "e0380017-a35b-4381-a9da-ed81d28022aa",
            "attributes": {}
          },
          {
            "id": "77b097b4-0a34-4dff-814b-19169c2beeb8",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "e0380017-a35b-4381-a9da-ed81d28022aa",
            "attributes": {}
          },
          {
            "id": "9096049b-cb6d-4da5-996d-24f31175d51d",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "e0380017-a35b-4381-a9da-ed81d28022aa",
            "attributes": {}
          },
          {
            "id": "a8469500-f1b1-4d04-a02a-3b808cf26ea1",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "e0380017-a35b-4381-a9da-ed81d28022aa",
            "attributes": {}
          },
          {
            "id": "830c54ce-f2ca-4a4c-a08d-a1fa2c9a0f19",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "e0380017-a35b-4381-a9da-ed81d28022aa",
            "attributes": {}
          },
          {
            "id": "6facaf07-47da-4ed9-b17a-b0e0a432104b",
            "name": "delete-account",
            "description": "${role_delete-account}",
            "composite": false,
            "clientRole": true,
            "containerId": "e0380017-a35b-4381-a9da-ed81d28022aa",
            "attributes": {}
          }
        ],
        "hypercloud5": [],
        "jaeger": [
          {
            "id": "13d46556-ce26-4d52-be7b-e76ea2375eaa",
            "name": "jaeger-manager",
            "description": "jaeger-manager for accessing jaeger via api-gateway",
            "composite": false,
            "clientRole": true,
            "containerId": "f41e8853-b6b6-4780-986f-7de7a9cf1a9e",
            "attributes": {}
          },
          {
            "id": "9bfb0467-4402-4099-a5d5-ce0147443674",
            "name": "uma_protection",
            "composite": false,
            "clientRole": true,
            "containerId": "f41e8853-b6b6-4780-986f-7de7a9cf1a9e",
            "attributes": {}
          }
        ]
      }
      },
      "groups": [
      {
        "id": "fa1b5a86-7fc6-4ca1-8a16-ee52427e972f",
        "name": "argocd-admin",
        "path": "/argocd-admin",
        "subGroups": [],
        "attributes": {},
        "realmRoles": [],
        "clientRoles": {}
      },
      {
        "id": "4f51727c-7582-4c09-8927-86a375d9b0b9",
        "name": "hypercloud5",
        "path": "/hypercloud5",
        "subGroups": [],
        "attributes": {},
        "realmRoles": [
          "uma_authorization",
          "offline_access",
          "admin"
        ],
        "clientRoles": {}
      }
      ],
      "defaultRole": {
      "id": "593e228f-f76c-4b86-bbec-0bc896729ad5",
      "name": "default-roles-tmax",
      "description": "${role_default-roles}",
      "composite": true,
      "clientRole": false,
      "containerId": "tmax"
      },
      "defaultGroups": [
      "/hypercloud5"
      ],
      "requiredCredentials": [
      "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": [
      "totpAppFreeOTPName",
      "totpAppGoogleName",
      "totpAppMicrosoftAuthenticatorName"
      ],
      "localizationTexts": {},
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
      "ES256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyExtraOrigins": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessExtraOrigins": [],
      "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
      ],
      "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account",
            "view-groups"
          ]
        }
      ]
      },
      "clients": [
      {
        "id": "e0380017-a35b-4381-a9da-ed81d28022aa",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/tmax/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/tmax/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "7d2e05ba-6873-4f0a-96e5-078b82498da8",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/tmax/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/realms/tmax/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "e0f96fa8-1fc3-4e88-b065-684385960f35",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "f5e46925-8e86-4f72-b007-04d0cbe71742",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "98e52540-1a81-410c-bdca-7ba694cca56d",
        "clientId": "argocd",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "tmax_client_secret",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "frontchannel.logout.session.required": "false",
          "post.logout.redirect.uris": "+",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml.client.signature": "false",
          "require.pushed.authorization.requests": "false",
          "saml.allow.ecp.flow": "false",
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "client.secret.creation.time": "1706754901",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml.artifact.binding": "false",
          "saml_force_name_id_format": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "acr.loa.map": "{}",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "token.response.type.bearer.lower-case": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "9c7a2617-e555-4e05-9372-5e6226703025",
            "name": "argocd",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-mapper",
            "consentRequired": false,
            "config": {
              "included.client.audience": "argocd",
              "id.token.claim": "false",
              "access.token.claim": "true",
              "userinfo.token.claim": "false"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "groups",
          "email",
          "group"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "7470228f-e009-4dd4-a9a2-ee3cf0a60d7c",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "1b927356-dc7f-4b31-adf2-5a0518d56180",
        "clientId": "gitea",
        "name": "gitea",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "tmax_client_secret",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "oidc.ciba.grant.enabled": "false",
          "client.secret.creation.time": "1714094650",
          "backchannel.logout.session.required": "true",
          "oauth2.device.authorization.grant.enabled": "false",
          "display.on.consent.screen": "false",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email",
          "sa-token",
          "group"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "cbfc8442-2d69-4825-81ed-bb18468e5684",
        "clientId": "gitlab",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "tmax_client_secret",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "frontchannel.logout.session.required": "false",
          "post.logout.redirect.uris": "+",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml.client.signature": "false",
          "require.pushed.authorization.requests": "false",
          "saml.allow.ecp.flow": "false",
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "client.secret.creation.time": "1706761028",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml.artifact.binding": "false",
          "saml_force_name_id_format": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "acr.loa.map": "{}",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "token.response.type.bearer.lower-case": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "user_name",
          "roles",
          "profile",
          "email",
          "openid",
          "group"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "0b51c934-7f45-4196-bf8a-52e10cc9e973",
        "clientId": "grafana",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "tmax_client_secret",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "frontchannel.logout.session.required": "false",
          "post.logout.redirect.uris": "+",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml.client.signature": "false",
          "require.pushed.authorization.requests": "false",
          "saml.allow.ecp.flow": "false",
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "client.secret.creation.time": "1707101084",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml.artifact.binding": "false",
          "saml_force_name_id_format": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "acr.loa.map": "{}",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "token.response.type.bearer.lower-case": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email",
          "group"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "6b3056b4-a7a4-468e-bd92-35ee616aceed",
        "clientId": "hypercloud5",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          "*"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "frontchannel.logout.session.required": "false",
          "post.logout.redirect.uris": "+",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml.client.signature": "false",
          "require.pushed.authorization.requests": "false",
          "saml.allow.ecp.flow": "false",
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "saml.encrypt": "false",
          "login_theme": "keycloak",
          "saml.server.signature": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml.artifact.binding": "false",
          "saml_force_name_id_format": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "acr.loa.map": "{}",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "token.response.type.bearer.lower-case": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {
          "browser": "252c41e0-7e43-40a7-bd8d-bb4761ba34ea"
        },
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "eb3a0c48-f5dc-4267-aba3-a79dd30d8d75",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-group-membership-mapper",
            "consentRequired": false,
            "config": {
              "full.path": "true",
              "userinfo.token.claim": "true",
              "multivalued": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "hypercloud5"
            }
          },
          {
            "id": "a3ca1f44-2321-4b80-831a-2d2e0f46c422",
            "name": "hypercloud5",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-mapper",
            "consentRequired": false,
            "config": {
              "included.client.audience": "hypercloud5",
              "id.token.claim": "false",
              "access.token.claim": "true",
              "included.custom.audience": "hypercloud5",
              "userinfo.token.claim": "false"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email",
          "group",
          "sa-token"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "f41e8853-b6b6-4780-986f-7de7a9cf1a9e",
        "clientId": "jaeger",
        "name": "",
        "description": "",
        "rootUrl": "",
        "adminUrl": "",
        "baseUrl": "",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "tmax_client_secret",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          ""
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": true,
        "publicClient": false,
        "frontchannelLogout": true,
        "protocol": "openid-connect",
        "attributes": {
          "oidc.ciba.grant.enabled": "false",
          "client.secret.creation.time": "1713923680",
          "backchannel.logout.session.required": "true",
          "oauth2.device.authorization.grant.enabled": "false",
          "display.on.consent.screen": "false",
          "backchannel.logout.revoke.offline.tokens": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "7df7049b-1d2f-49ae-a0ab-83f8acbbf711",
            "name": "Client Host",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientHost",
              "introspection.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientHost",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a0ecd665-1f4e-403f-a88a-0e9ce80b5ff5",
            "name": "jaeger",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-mapper",
            "consentRequired": false,
            "config": {
              "included.client.audience": "jaeger",
              "id.token.claim": "false",
              "access.token.claim": "true",
              "introspection.token.claim": "true"
            }
          },
          {
            "id": "b93357a9-b139-44bc-bdc8-9eb5a86fc4ae",
            "name": "Client ID",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "client_id",
              "introspection.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "client_id",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c9bcc8c7-389a-4ef5-8ff9-1b330806de33",
            "name": "Client IP Address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usersessionmodel-note-mapper",
            "consentRequired": false,
            "config": {
              "user.session.note": "clientAddress",
              "introspection.token.claim": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "clientAddress",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email",
          "group"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt",
          "sa-token"
        ]
      },
      {
        "id": "6d44b58e-6690-4e10-8eb0-db93a1832406",
        "clientId": "hyperregistry",
        "name": "hyperregistry",
        "description": "hyperregistry",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "tmax_client_secret",
        "redirectUris": [
          "*"
        ],
        "webOrigins": [
          ""
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.multivalued.roles": "false",
          "saml.force.post.binding": "false",
          "frontchannel.logout.session.required": "false",
          "post.logout.redirect.uris": "+",
          "oauth2.device.authorization.grant.enabled": "false",
          "backchannel.logout.revoke.offline.tokens": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "use.refresh.tokens": "true",
          "oidc.ciba.grant.enabled": "false",
          "backchannel.logout.session.required": "true",
          "client_credentials.use_refresh_token": "false",
          "saml.client.signature": "false",
          "require.pushed.authorization.requests": "false",
          "saml.allow.ecp.flow": "false",
          "saml.assertion.signature": "false",
          "id.token.as.detached.signature": "false",
          "client.secret.creation.time": "1706775913",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml.artifact.binding": "false",
          "saml_force_name_id_format": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "acr.loa.map": "{}",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "token.response.type.bearer.lower-case": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "30fb5233-b0f7-41ad-8b8f-8e2240dd55c0",
            "name": "group",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-group-membership-mapper",
            "consentRequired": false,
            "config": {
              "full.path": "true",
              "userinfo.token.claim": "true",
              "multivalued": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "group"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email",
          "group"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "48d2a9f6-0f0d-46f0-bb4e-f2abc5fb3190",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "7ba291c3-13b5-4bde-a960-dc2bb97eef80",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/tmax/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "redirectUris": [
          "/admin/tmax/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "post.logout.redirect.uris": "+",
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "7301b498-4cc8-49f0-b318-26718082ac67",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "acr",
          "roles",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
          "id": "3cda59e6-46bf-4682-9912-3e067b8d29d4",
          "clientId": "sonarqube",
          "name": "sonarqube",
          "description": "",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "tmax_client_secret",
          "redirectUris": [
            "*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "oidc.ciba.grant.enabled": "false",
            "oauth2.device.authorization.grant.enabled": "false",
            "client.secret.creation.time": "1714095211",
            "backchannel.logout.session.required": "true",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "acr",
            "roles",
            "profile",
            "email",
            "sa-token",
            "group"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
      {
        "id": "13670165-d11a-443c-a6c1-03cfe0122726",
        "name": "openid",
        "description": "",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "gui.order": "",
          "consent.screen.text": ""
        }
      },
      {
        "id": "53ac0dfd-7ac5-42ac-964c-12017b815489",
        "name": "kibana",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "4dcd8773-6016-415d-a250-ece4884d2cd1",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "8ce2b699-6913-48bb-ac80-3694c229eeef",
        "name": "user_name",
        "description": "user_name attribute",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "8c051c2e-5271-4473-b736-d1620237c1c1",
            "name": "user_name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "user_name",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "user_name",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "7516d2cc-c557-45e3-89b4-99b01ae2368f",
        "name": "kubernetes",
        "description": "Must Add this for kubernetes Call",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "a46025b8-9ebf-46b5-a815-c3900f969617",
            "name": "kiali-kubernetes",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-mapper",
            "consentRequired": false,
            "config": {
              "included.client.audience": "hypercloud5",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "e6799fa6-c647-4608-ab3e-15ffb66cf32a",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "3613c810-8d34-47bb-9900-2de62150be60",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          },
          {
            "id": "dfa9d1e0-9058-4b19-a4e0-0935a04d5815",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "22a1f5b1-0573-4c28-946a-7f53af17036c",
        "name": "groups",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "06078f0e-f894-40e1-affe-65c04d7c172c",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-group-membership-mapper",
            "consentRequired": false,
            "config": {
              "full.path": "false",
              "id.token.claim": "true",
              "claim.name": "groups",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "0766ba16-9f89-40c9-a0ff-5dee0b9ae61a",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "6d400bf3-a8da-4524-9e1d-04f91b9bf782",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "aa2a7f9d-cd97-4083-8785-a2c20e3c3345",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "6a734ac8-2a1f-4d6a-83fb-14835fda6935",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "486412be-52d7-4b29-9fa3-0ceac8ddba81",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "2e9bcd83-b075-40e8-bbd8-502c8cc0ba4c",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "7eee9db8-1f81-4741-b93f-28d2de682d6e",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "534081a5-5340-410d-8afc-d9c69ba9cdd0",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "020ed283-c754-4a68-aa07-d0e01e5ad771",
        "name": "group",
        "description": "for group claim in token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "b0377701-6978-4079-9ea9-02a4253d46ca",
            "name": "group",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-group-membership-mapper",
            "consentRequired": false,
            "config": {
              "full.path": "false",
              "userinfo.token.claim": "true",
              "multivalued": "true",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "group"
            }
          }
        ]
      },
      {
        "id": "fd6f277d-34df-43fb-be55-3a8bc11d5f39",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "50c25810-b6f9-4ec9-9281-26b82a618209",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      },
      {
        "id": "30fea3b2-8dae-484d-8f6f-c98c1e0c0697",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "56b81c5d-c3af-4976-ad89-abf860ea7562",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "582d2698-daa3-4e6f-a5f0-f61afd07e12f",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "3acb28db-371c-4964-8282-4b0d7a8040c9",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "df7647cc-f2db-4d26-b3c5-ca41a860e811",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "long"
            }
          },
          {
            "id": "387c3910-df9f-4aa4-a0e1-a424d9727ff8",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "5405e7fe-1195-41f7-8510-a02ca3713f4a",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "078e950c-c421-4506-809a-8ba9dab137ee",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c0de0377-c6fc-460e-9963-8394ec511c2e",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          },
          {
            "id": "41961788-c25f-4724-94d1-77a5353267bf",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "4248db5a-d947-48fd-b5b7-621b81e9d544",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "cb3e3313-86c3-49fc-ba60-cf0f711a30e0",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "53a91506-e80e-4f0f-b15a-a423bbec17b5",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "0193772f-0124-4169-8c7c-95ed9013fed6",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c0109601-ebf2-482a-a02b-57a32ee540f1",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "30c8e9e2-6933-4af9-aac5-5e531caa1820",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e2459598-950d-4ee2-b8d6-015da853aca3",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "90b40181-56c9-4065-81ea-d7457eb60f64",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "2cade3f2-6e30-4c0a-9097-e27f2c6a2641",
        "name": "acr",
        "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "99f9d945-930d-48c2-a237-d3f0ca76cb02",
            "name": "acr loa level",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-acr-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          }
        ]
      },
      {
        "id": "c77fbd75-4b27-4d7d-a9bc-520afff2ca97",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "34bdcbbe-a4c9-45a2-844e-02561eb52830",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          },
          {
            "id": "a8d6ce03-e9a5-4eda-b273-f48f04cef8ea",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          }
        ]
      },
      {
        "id": "781f91ad-0d8a-4b49-b101-b4c567b73f19",
        "name": "sa-token",
        "description": "sa-token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "gui.order": "",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "62b180d6-afa8-4eb5-a970-9258914b8d49",
            "name": "sa-token",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "introspection.token.claim": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "sa-token",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "sa-token",
              "jsonType.label": "String"
            }
          }
        ]
      }
      ],
      "defaultDefaultClientScopes": [
      "role_list",
      "profile",
      "email",
      "roles",
      "web-origins",
      "acr",
      "group",
      "sa-token"
      ],
      "defaultOptionalClientScopes": [
      "offline_access",
      "address",
      "phone",
      "microprofile-jwt"
      ],
      "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {},
      "loginTheme": "keycloak",
      "accountTheme": "keycloak.v2",
      "adminTheme": "keycloak.v2",
      "emailTheme": "keycloak",
      "eventsEnabled": false,
      "eventsListeners": [
      "jboss-logging"
      ],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [
      {
        "alias": "shinhan-life",
        "internalId": "01b2b69e-a670-4544-a424-000691676d7e",
        "providerId": "shinhan-life",
        "enabled": false,
        "updateProfileFirstLoginMode": "on",
        "trustEmail": false,
        "storeToken": false,
        "addReadTokenRoleOnCreate": false,
        "authenticateByDefault": false,
        "linkOnly": false,
        "firstBrokerLoginFlowAlias": "first broker login",
        "config": {
          "syncMode": "IMPORT",
          "clientSecret": "**********",
          "clientId": "initech-boot",
          "useJwksUrl": "true"
        }
      }
      ],
      "identityProviderMappers": [],
      "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "263334da-1684-4082-a03b-7c0c26f55713",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "6747e10a-9208-472e-bd9e-1cb918a646ff",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-usermodel-property-mapper",
              "saml-user-attribute-mapper",
              "saml-user-property-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-full-name-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "0707bafb-e236-49b2-9a4b-c166e9c4d7f5",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "2c3aab32-0d2a-456d-8d6c-173a928762cf",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "7463a7ef-5267-45df-806c-ac849424da2b",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "8f0e6fd3-91b2-4f92-a872-cd0a9348e317",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "1fd5daff-9dfe-4406-a56b-48f71d1b0d3d",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        },
        {
          "id": "266e81b9-4fce-4b48-84b4-bef22ee90114",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "saml-user-attribute-mapper",
              "oidc-usermodel-attribute-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "oidc-usermodel-property-mapper",
              "saml-role-list-mapper",
              "oidc-address-mapper",
              "saml-user-property-mapper",
              "oidc-full-name-mapper"
            ]
          }
        }
      ],
      "org.keycloak.userprofile.UserProfileProvider": [
        {
          "id": "eb7e73d5-bcb2-4977-b1fa-9d3ae6a799ac",
          "providerId": "declarative-user-profile",
          "subComponents": {},
          "config": {}
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "ef0e31a0-ea28-4736-a5e7-638c25e055be",
          "name": "rsa-enc-generated",
          "providerId": "rsa-enc-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ],
            "algorithm": [
              "RSA-OAEP"
            ]
          }
        },
        {
          "id": "32c0ae05-4418-404f-a7f7-14b5768b426d",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        },
        {
          "id": "df840e86-f3d2-44b8-9c6a-6f8b71784a3a",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "d3f38947-4579-44ef-a63f-d107ee207e49",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "priority": [
              "100"
            ]
          }
        }
      ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [
      "de",
      "no",
      "fi",
      "ru",
      "sv",
      "pt-BR",
      "lt",
      "en",
      "it",
      "fr",
      "hu",
      "zh-CN",
      "es",
      "cs",
      "ja",
      "sk",
      "pl",
      "da",
      "ca",
      "nl",
      "tr"
      ],
      "defaultLocale": "en",
      "authenticationFlows": [
      {
        "id": "a5c9cd53-8a8c-412d-a3a2-c717379fc2c2",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "0fcb77e6-bae3-4db1-9301-94e153ea0de6",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "f09eff1f-5270-4415-b5d4-288359c7d739",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "d3e52f5c-e99d-4c21-956e-1cc95420d1f6",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-otp-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "e28aa2bd-70b6-4a9d-88de-fa29c0d8ac1f",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "5f97f12d-3d93-4480-a31a-74db095b25aa",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-otp",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "bd4a2682-4eea-4bb6-bfce-1d84225f09cd",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "2aa2f275-e0e2-4721-82f0-ad15f05298fa",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "252c41e0-7e43-40a7-bd8d-bb4761ba34ea",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "auth-spnego",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "forms",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "d10fa844-3c15-4bec-9e4f-4847284d08a2",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-secret-jwt",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "client-x509",
            "authenticatorFlow": false,
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "c0a8afb5-f321-4337-9ff6-952032bd88c7",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 30,
            "autheticatorFlow": true,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "add3106c-244e-4782-8d0d-3d22112e7e21",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "3ea24489-837a-4be8-92a0-720ad290d06f",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "01eac24e-4c70-4fd1-9f5d-4de5545481ce",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "DISABLED",
            "priority": 20,
            "autheticatorFlow": true,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "363da2f1-4ecc-4133-b3d3-3c11aec8c714",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "authenticatorFlow": true,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": true,
            "flowAlias": "registration form",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "11379fdd-da50-43cc-99f2-47def30b4d89",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-password-action",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 50,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "authenticatorFlow": false,
            "requirement": "DISABLED",
            "priority": 60,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "88ea25e6-5b36-4f47-9ffb-0e3f3ec08f24",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-credential-email",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 20,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticator": "reset-password",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 30,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          },
          {
            "authenticatorFlow": true,
            "requirement": "CONDITIONAL",
            "priority": 40,
            "autheticatorFlow": true,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false
          }
        ]
      },
      {
        "id": "be570fae-71fc-4288-8f17-c664d77b3b0b",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "authenticatorFlow": false,
            "requirement": "REQUIRED",
            "priority": 10,
            "autheticatorFlow": false,
            "userSetupAllowed": false
          }
        ]
      }
      ],
      "authenticatorConfig": [
      {
        "id": "145a280b-3451-4934-b94c-501ecba4ed73",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "075e595f-aa2f-4061-9ac1-ebbe418776a1",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
      ],
      "requiredActions": [
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": false,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "TERMS_AND_CONDITIONS",
        "name": "Terms and Conditions",
        "providerId": "TERMS_AND_CONDITIONS",
        "enabled": false,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": false,
        "defaultAction": false,
        "priority": 60,
        "config": {}
      },
      {
        "alias": "webauthn-register",
        "name": "Webauthn Register",
        "providerId": "webauthn-register",
        "enabled": false,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      },
      {
        "alias": "delete_account",
        "name": "Delete Account",
        "providerId": "delete_account",
        "enabled": false,
        "defaultAction": false,
        "priority": 1001,
        "config": {}
      }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "attributes": {
      "cibaBackchannelTokenDeliveryMode": "poll",
      "cibaExpiresIn": "120",
      "cibaAuthRequestedUserHint": "login_hint",
      "oauth2DeviceCodeLifespan": "600",
      "clientOfflineSessionMaxLifespan": "0",
      "oauth2DevicePollingInterval": "5",
      "clientSessionIdleTimeout": "0",
      "userProfileEnabled": "false",
      "parRequestUriLifespan": "60",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0",
      "cibaInterval": "5"
      },
      "keycloakVersion": "23.0.6",
      "userManagedAccessAllowed": false,
      "clientProfiles": {
      "profiles": []
      },
      "clientPolicies": {
      "policies": []
      }
    }