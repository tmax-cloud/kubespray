---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/name: kubeflow
  name: application-controller-service-account
  namespace: {{ ai_devops_namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/name: kubeflow
  name: application-controller-cluster-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - update
  - patch
  - watch
- apiGroups:
  - app.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/name: kubeflow
  name: application-controller-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: application-controller-cluster-role
subjects:
- kind: ServiceAccount
  name: application-controller-service-account
  namespace: {{ ai_devops_namespace }}
---
apiVersion: v1
data:
  project: ""
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/name: kubeflow
  name: application-controller-parameters
  namespace: {{ ai_devops_namespace }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/name: kubeflow
  name: application-controller-service
  namespace: {{ ai_devops_namespace }}
spec:
  ports:
  - port: 443
  selector:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/name: kubeflow
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: kubeflow
    app.kubernetes.io/name: kubeflow
  name: application-controller-stateful-set
  namespace: {{ ai_devops_namespace }}
spec:
  selector:
    matchLabels:
      app: application-controller
      app.kubernetes.io/component: kubeflow
      app.kubernetes.io/name: kubeflow
  serviceName: application-controller-service
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: application-controller
        app.kubernetes.io/component: kubeflow
        app.kubernetes.io/name: kubeflow
    spec:
      containers:
      - command:
        - /root/manager
        env:
        - name: project
          value: ""
        image: {{ application_controller_image_repo }}:{{ application_controller_image_tag }}
        imagePullPolicy: Always
        name: manager
      serviceAccountName: application-controller-service-account
  volumeClaimTemplates: []
