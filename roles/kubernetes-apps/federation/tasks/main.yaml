---
# tasks file for hypercloud
- name: Federation | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/federation"
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Federation | Generate Manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/federation/{{ item.file }}"
  with_items:
    - { name: "federation", file: "federation.yaml"}
    - { name: "federation-crd", file: "federation-crd.yaml"}
  when: 
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Federation | Apply Federation
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/addons/federation/{{ item }}"
    state: "latest"
    wait: true
  with_items:
    - "federation-crd.yaml"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Federation | Apply Federation
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/addons/federation/{{ item }}"
    state: "latest"
    wait: true
  with_items:
    - "federation.yaml"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Federation | Generate Binary - kubefedctl
  ansible.builtin.copy:
    src: "templates/{{ item.file }}"
    dest: "{{ kube_config_dir }}/addons/federation/"
    owner: "root"
    group: "root"
    mode: '0755'
  with_items:
    - { name: "kubefedctl", file: "kubefedctl" }
  when: 
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Federation | Generate CRD - FederatedTypeConfig for HyperCloud
  ansible.builtin.shell: |
    sleep 10s
    cp ./kubefedctl /usr/bin/kubefedctl
    HYPERCLOUD_CRD="po hpa ds sts cj" 
    for crd in ${HYPERCLOUD_CRD};
    do
        ./kubefedctl enable ${crd} --federated-group types.kubefed.io
    done
  args:
    chdir: "{{ kube_config_dir }}/addons/federation"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]