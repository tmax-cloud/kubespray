- name: Gitlab | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/gitlab"
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Gitlab | Copy Manifests
  template:
    src: "{{ item }}.j2"
    dest: "{{ kube_config_dir }}/addons/gitlab/{{ item }}"
  with_items:
    - gitlab-deploy.yml
    - push_argoCD.sh
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Gitlab | Copy ArgoCD-installer
  copy:
    src: "{{ playbook_dir }}/roles/kubernetes-apps/gitlab/templates/argocd_installer"
    dest: "{{ kube_config_dir }}/addons/gitlab/"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Gitlab | Apply manifests
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/addons/gitlab/{{ item }}"
    state: "latest"
    wait: true
  with_items:
    - gitlab-deploy.yml
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Gitlab | wait for gitlab to be deployed
  shell: "echo $({{ bin_dir }}/kubectl -n gitlab-system get pod -o jsonpath='{.items[0].status.containerStatuses[0].ready}');"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Gitlab | Check gitlab installed
  ansible.builtin.shell: |
    while true; do
      sleep 5s
      status=$({{ bin_dir }}/kubectl -n gitlab-system get pod -o jsonpath='{.items[0].status.containerStatuses[0].ready}')
      if [[ "$status" == "true" ]]; then
        break
      fi
    done
  args:
    chdir: "{{ kube_config_dir }}/addons/gitlab"
  ignore_errors: true

- name: Gitlab | push argoCD to gitlab
  ansible.builtin.shell: |
    sudo chmod +755 push_argoCD.sh
    sudo ./push_argoCD.sh
  args:
    chdir: "{{ kube_config_dir }}/addons/gitlab"
  ignore_errors: true
