- name: grafana | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/grafana"
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - inventory_hostname == groups['kube_control_plane'][0] 
- name: grafana | Create manifests dir
  file:
    path: "{{ kube_config_dir }}/addons/grafana/manifests"
    state: directory
    owner: root
    group: root
    mode: 0755
  when:
    - inventory_hostname == groups['kube_control_plane'][0] 
- name: grafana | Create manifests
  template:
    src: "manifests/{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/grafana/manifests/{{ item.file }}"
  with_items:
    - { name: grafana-config, file: grafana-config.yaml}
    - { name: grafana, file: grafana.yaml}
    - { name: grafana-dashboardDatasources, file: grafana-dashboardDatasources.yaml}
    - { name: grafana-dashboard-hyperauth, file: grafana-dashboard-hyperauth.yaml}
    - { name: grafana-dashboard-k8s-resources-namespace, file: grafana-dashboard-k8s-resources-namespace.yaml}
    - { name: grafana-dashboardSources, file: grafana-dashboardSources.yaml}
    - { name: grafana-pvc, file: grafana-pvc.yaml}
    - { name: grafana-service, file: grafana-service.yaml}
    - { name: grafana-serviceAccount, file: grafana-serviceAccount.yaml}
    - { name: grafana-serviceMonitor, file: grafana-serviceMonitor.yaml}
  register: grafana_manifests
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
- name: Register grafana_client_secret variable
  ansible.builtin.shell: |
    sudo chmod +755 getGrafanaClientSecret.sh
    sudo ./getGrafanaClientSecret.sh
  args:
    chdir: "{{ kube_config_dir }}/addons/grafana"
  register: grafana_client_secret
  ignore_errors: true
- name: grafana | Apply manifests
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/addons/grafana/manifests/{{ item }}"
    state: "latest"
    wait: true
  with_items:
    - "grafana-config.yaml"
    - "grafana.yaml"
    - "grafana-dashboardDatasources.yaml"
    - "grafana-dashboard-hyperauth.yaml"
    - "grafana-dashboard-k8s-resources-namespace.yaml"
    - "grafana-dashboardSources.yaml"
    - "grafana-pvc.yaml"
    - "grafana-service.yaml"
    - "grafana-serviceAccount.yaml"
    - "grafana-serviceMonitor.yaml"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
